// stylelint-disable declaration-no-important

//
// Utilities for common `display` values
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    @each $value in $displays {
      .#{$bs-prefix}d#{$infix}-#{$value} { display: $value !important; }
    }
  }
}
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .#{$bs-prefix}d#{$infix}-down-none { display: none !important; } // CoreUI s, ToDo: check
  }
}

@each $theme in $default-themes {
  .#{$prefix}#{$theme}-theme {
    .#{$prefix}d-#{$theme}-none { display: none !important; }
  }
  @if $default-theme {
    @if $theme != $default-theme {
      body,
      div,
      .#{$prefix}app {
        &:not(.#{$prefix}#{$theme}-theme) {
          .#{$prefix}d-#{$default-theme}-none { display: none !important; }
        }
      }
    }
  }
}


//
// Utilities for toggling `display` in print
//

@media print {
  @each $value in $displays {
    .#{$bs-prefix}d-print-#{$value} { display: $value !important; }
  }
}
